name: "[DLS] Update models on self-hosted runners"
run-name: "[DLS] Update models on self-hosted runners (by @${{ github.actor }} via ${{ github.event_name }})"
on:
  push:
    branches:
      - dls_dmichalo_ModelsDownloadWorkflow
  schedule:
    - cron: '0 6 * * MON' # 6:00 UTC each Monday
  workflow_dispatch:
permissions: {}
env:
  MODELS_PATH: "$HOME/models"

jobs:
  update_linux_hosts:
    name: Update on Linux runners
    runs-on: ${{ matrix.host_labels }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - host_labels: [self-hosted, DLS-ARL-01]
          - host_labels: [self-hosted, DLS-ARL-02]
    steps:
    - name: Get script
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
      with:
        persist-credentials: false
        sparse-checkout: |
          libraries/dl-streamer/samples/download_public_models.sh
        sparse-checkout-cone-mode: false

    # - name: Prepare directory
    #   run: |
    #     if [ -d "${{ env.MODELS_PATH }}" ]; then
    #       echo "Directory ${{ env.MODELS_PATH }} exists - removing it"
    #       rm -rf "${{ env.MODELS_PATH }}"
    #     fi
    #     mkdir -p ${{ env.MODELS_PATH }}
    #     echo "Directory created: ${{ env.MODELS_PATH }}"

    # - name: Download public models
    #   run: |
    #     export MODELS_PATH=${{ env.MODELS_PATH }}
    #     ./libraries/dl-streamer/samples/download_public_models.sh

    - name: Verify public models downloading
      run: |
        if [ -z "$( ls -A ${{ env.MODELS_PATH }}/public )" ]; then
          echo "Models not downloaded correctly ❌"
          echo "Public models not downloaded ❌" >> $GITHUB_STEP_SUMMARY
          echo "Exiting..."
          exit 1
        else
          echo "Models downloaded ✅"
          echo "Public models downloaded ✅" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Download OMZ models
      run: |
        mkdir -p .virtualenvs/dlstreamer
        python3 -m venv .virtualenvs/dlstreamer
        source .virtualenvs/dlstreamer/bin/activate
        pip3 install --no-cache-dir --upgrade tensorflow openvino-dev[onnx]
        export MODELS_PATH=${MODELS_PATH}
        ./libraries/dl-streamer/samples/download_omz_models.sh
        deactivate

    - name: Verify OMZ models downloading
      run: |
        if [ -z "$( ls -A '${{ env.MODELS_PATH }}/intel' )" ]; then
          echo "Models not downloaded correctly ❌"
          echo "Open Model Zoo models not downloaded ❌" >> $GITHUB_STEP_SUMMARY
          echo "Exiting..."
          exit 1
        else
          echo "Models downloaded ✅"
          echo "Open Model Zoo models downloaded ✅" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Clean up
      if: always()
      run: |
        rm -rf .virtualenvs/dlstreamer
