#
# Apache v2 license
# Copyright (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
name: Pull Request
on:
  # Trigger the workflow on pull request,
  # but only for the main branch
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      - main
  # Also trigger on page_build, as well as release created events
  workflow_dispatch:
jobs:
  filter:
    permissions:
      contents: read          # needed for actions/checkout
    runs-on: ubuntu-latest
    outputs:
      time_series_analytics_changed: ${{ steps.filter.outputs.time-series-analytics }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set paths filter
        id: filter
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
        with:
          filters: |
            time-series-analytics:
              - 'microservices/time-series-analytics/**'
  build:
    permissions:
      contents: read          # needed for actions/checkout
    needs: filter
    if: ${{ needs.filter.outputs.time_series_analytics_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: Runner workspace path
      run: |
        echo "Cleaning up previous run"
        if [ -n "$(docker ps -aq)" ]; then
            docker stop $(docker ps -aq)
        fi
        if [ -n "$(docker ps -aq)" ]; then
            docker rm $(docker ps -aq)
        fi
        docker images --quiet --filter=dangling=true | xargs --no-run-if-empty docker rmi -f
    - uses: actions/checkout@v1
      with:
          path: timeseries
    - name: Build
      run: |
        cd ./microservices/time-series-analytics
        sed -i "s/DOCKER_REGISTRY=.*/DOCKER_REGISTRY=admin/g" .env
        docker compose down -v 
        docker compose build
    - name: Run unit tests
      run: |
        cd "${{ github.workspace }}"
        cd ./microservices/time-series-analytics
        echo "Running unit tests"
        ./tests/run_tests.sh
    - name: Deploy
      run: |
        cd "${{ github.workspace }}"
        cd ./microservices/time-series-analytics
        echo "Deploying time-series-analytics microservices"
        docker compose up -d
    - name: Undeploy
      run: |
        cd "${{ github.workspace }}"
        cd ./microservices/time-series-analytics
        docker compose down -v
    - name: Upload HTML unit test coverage to Github
      uses: actions/upload-artifact@v4
      with:
          name: unit-test-coverage
          path: /tmp/htmlcov
    - name: Upload XML unit test coverage to Github
      uses: actions/upload-artifact@v4
      with:
          name: unit-test-report
          path: /tmp/report.txt