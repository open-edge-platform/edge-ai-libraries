#
# Apache v2 license
# Copyright (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
name: "[Time SeriesAnalytics] Virus, Bandit and Pylint Scan"
run-name: "[Time Series Analytics] Virus, Bandit and Pylint Scan workflow (by @${{ github.actor }} via ${{ github.event_name }})"

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  security-events: write

jobs:  
  bandit-scans:
    permissions:
      contents: read
      packages: read
    name: Run Bandit Scan
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - ubuntu_version: ubuntu24
    steps:
    - name: Check out edge-ai-libraries repository
      uses: actions/checkout@v4
      with:
        path: edge-ai-libraries-repo
        persist-credentials: false

    - name: Run Bandit Scan
      run: |
        mkdir -p reports
        docker pull ghcr.io/pycqa/bandit/bandit
        echo "### Bandit Scan Results" >> $GITHUB_STEP_SUMMARY
        docker run --rm -v "${{ github.workspace }}:/src" ghcr.io/pycqa/bandit/bandit -r /src/edge-ai-libraries-repo/microservices/time-series-analytics -f txt -o /src/reports/bandit-report.txt || true >> $GITHUB_STEP_SUMMARY
        echo "Please find full report in bandit-report.txt" >> $GITHUB_STEP_SUMMARY
    - name: Upload Scan Reports
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: reports/bandit-report.txt
    - name: Clean up
      if: always()
      run: |
        rm -rf edge-ai-libraries-repo
        if [ -n "$(docker images -aq)" ]; then
              docker rmi -f $(docker images -aq) || true
        fi

  virus-scans:
    name: Run Virus Scan
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - ubuntu_version: ubuntu24
    steps:
    - name: Check out edge-ai-libraries repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Run Virus Scan
      run: |
        mkdir -p reports
        docker pull clamav/clamav
        echo "### Virus Scan Results" >> $GITHUB_STEP_SUMMARY
        docker run --rm -v "${{ github.workspace }}:/src" clamav/clamav clamscan -r  /src/microservices/time-series-analytics/ > ./reports/clamav-report.txt || true
        echo "Please find full report in clamav-report.txt" >> $GITHUB_STEP_SUMMARY
    - name: Upload Scan Reports
      uses: actions/upload-artifact@v4
      with:
        name: virus-reports
        path: reports/clamav-report.txt
    - name: Clean up
      if: always()
      run: |
        rm -rf edge-ai-libraries-repo
        if [ -n "$(docker images -aq)" ]; then
              docker rmi -f $(docker images -aq) || true
        fi
  pylint-scans:
    name: Run Pylint
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - ubuntu_version: ubuntu24

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # or any version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Run Pylint
        run: |
          pylint microservices/time-series-analytics/src/*.py > microservices/time-series-analytics/pylint-report.txt || true
      
      - name: Upload Pylint report
        uses: actions/upload-artifact@v4
        with:
          name: pylint-report
          path: microservices/time-series-analytics/pylint-report.txt
