name: "[SCANS] CodeQL (on host)"
run-name: "[SCANS] CodeQL (on host)"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions: {}

jobs:
  detect-languages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      langs: ${{ steps.detect-langs.outputs.langs }}
      projects: ${{ steps.detect-langs.outputs.projects }}
    steps:
      - name: Check out edge-ai-libraries repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
        with:
          path: edge-ai-libraries-repo
          persist-credentials: false
          fetch-depth: 0

      - name: Detect changed languages
        id: detect-langs
        run: |
          cd edge-ai-libraries-repo
          if [ "$(git rev-parse --abbrev-ref HEAD)" != "main" ]; then
            git fetch origin main:main
            echo "Fetched main branch"
          fi
          changed_files=$(git diff --name-only main...$GITHUB_SHA -- '*.h' '*.hpp' '*.c' '*.cpp' '*.sh' '*.py' '*.java' '*.js' '*.ts' || true)
          echo "Performed git diff"

          if [ -z "$changed_files" ]; then
            echo "No relevant changed files detected."
            echo "langs=[]" >> $GITHUB_OUTPUT
            echo "projects=[]" >> $GITHUB_OUTPUT
            exit 0
          fi
          declare -A langmap=( ["c"]=c-cpp ["cpp"]=c-cpp ["h"]=c-cpp ["hpp"]=c-cpp ["py"]=python ["java"]=java-kotlin ["js"]=javascript-typescript ["ts"]=javascript-typescript )
          declare -A langs
          declare -A projects

          for file in $changed_files; do
            ext="${file##*.}"
            [[ ${langmap[$ext]} ]] && langs[${langmap[$ext]}]=1
            proj="$(echo "$file" | cut -d/ -f2)"
            projects[$proj]=1
          done

          langs_json=$(printf '%s\n' "${!langs[@]}" | sort | jq -R . | jq -s -c .)
          projects_json=$(printf '%s\n' "${!projects[@]}" | sort | jq -R . | jq -s -c .)
          echo "Changed files:"
          echo "$changed_files"
          echo "Detected langs:"
          echo "$langs_json"
          echo "Detected projects:"
          echo "$projects_json"
          echo "langs=$langs_json" >> $GITHUB_OUTPUT
          echo "projects=$projects_json" >> $GITHUB_OUTPUT

  analyze:
    needs: detect-languages
    runs-on: ubuntu-24.04-16core-64GB
    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJson(needs.detect-languages.outputs.langs) }}
        project: ${{ fromJson(needs.detect-languages.outputs.projects) }}
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: read

    steps:
      - name: Check out edge-ai-libraries repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
        with:
          persist-credentials: false

      - name: Init submodules
        run: |
          git submodule update --init libraries/dl-streamer/thirdparty/spdlog

      - name: Set build-mode
        id: set-build-mode
        run: |
          LANGUAGE="${{ matrix.language }}"
          if [[ "$LANGUAGE" == "c-cpp" ]]; then
            echo "build-mode=manual" >> $GITHUB_OUTPUT
          else
            echo "build-mode=none" >> $GITHUB_OUTPUT
          fi

      - name: Set project name
        id: set-project-name
        run: |
          PROJECT="${{ matrix.project }}"
          if [[ "$PROJECT" == "dl-streamer" ]]; then
            echo "project-name=dl-streamer" >> $GITHUB_OUTPUT
            echo "paths-to-scan=libraries/dl-streamer" >> $GITHUB_OUTPUT
          else
            echo "project-name=none" >> $GITHUB_OUTPUT
            echo "paths-to-scan=." >> $GITHUB_OUTPUT
          fi

      - name: Initialize CodeQL build mode
        uses: github/codeql-action/init@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ steps.set-build-mode.outputs.build-mode }}
          paths: ${{ steps.set-project-name.outputs.paths-to-scan }}

      - name: Build code manually for dl-streamer
        if: steps.set-build-mode.outputs.build-mode == 'manual' && steps.set-project-name.outputs.project-name == 'dl-streamer'
        run: |
          chmod +x libraries/dl-streamer/scripts/build_dlstreamer.sh
          ./libraries/dl-streamer/scripts/build_dlstreamer.sh

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@ce28f5bb42b7a9f2c824e633a3f6ee835bab6858 # v3.29.0
        with:
          category: "/language:${{matrix.language}}"
