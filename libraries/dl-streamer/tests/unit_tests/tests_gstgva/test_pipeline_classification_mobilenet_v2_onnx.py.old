# ==============================================================================
# Copyright (C) 2020-2022 Intel Corporation
#
# SPDX-License-Identifier: MIT
# ==============================================================================

import os
import unittest

from pipeline_runner import TestPipelineRunner
from utils import get_model_path, get_model_proc_path, BBox

SCRIPT_DIR = os.path.dirname(os.path.realpath(__file__))
IMAGE_PATH = os.path.join(SCRIPT_DIR, "test_files", "cup.jpg")

c_model_name = "mobilenetv2-7"
c_model_path = get_model_path(c_model_name, "onnx")
c_model_proc_name = "mobilenetv2-7"
c_model_proc_path = get_model_proc_path(c_model_proc_name)


PIPELINE_STR = """appsrc name=mysrc
! decodebin
! gvaclassify model={} model-proc={} inference-region=full-frame pre-process-backend=opencv
! gvawatermark
! appsink name=mysink emit-signals=true sync=false """.format(c_model_path, c_model_proc_path)

GOLD_TRUE = [
    BBox(0, 0, 1, 1,
         [
             {
                 'label': "cup",
                 'layer_name': "mobilenetv20_output_flatten0_reshape0",
                 'name': "ANY"
             }
         ]
         )
]


class TestFullFrameClassificationMobileNetV2Pipeline(unittest.TestCase):
    def test_classification_mobilenet_v2_pipeline(self):
        pipeline_runner = TestPipelineRunner()
        pipeline_runner.set_pipeline(PIPELINE_STR,
                                     IMAGE_PATH,
                                     GOLD_TRUE)
        pipeline_runner.run_pipeline()
        for e in pipeline_runner.exceptions:
            print(e)
        pipeline_runner.assertEqual(len(pipeline_runner.exceptions), 0,
                                    "Exceptions have been caught.")


if __name__ == "__main__":
    unittest.main()
