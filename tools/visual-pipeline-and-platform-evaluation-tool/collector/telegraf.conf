[global_tags]
    hostname = "${HOSTNAME}"
[agent]
    interval = "1s"
    round_interval = true
    metric_batch_size = 2000
    metric_buffer_limit = 20000
    collection_jitter = "1s"
    flush_interval = "1s"
    flush_jitter = "1s"
    precision = "1s"
    debug = false
    quiet = true
    logfile = ""
[[inputs.cpu]]
    percpu = false
    totalcpu = true
    collect_cpu_time = false
    report_active = false
    core_tags = false
    fieldinclude = ["usage_user", "usage_system"]
[[inputs.mem]]
    fieldinclude = ["total", "available", "used_percent"]
[[inputs.exec]]
  commands = ["python3 /app/qmassa_reader.py", "/app/read_cpu_freq.sh"]
  data_format = "influx"  # Still required, but our script ignores it
  interval = "1s"
[[inputs.temp]]
# Default config; collects all temps

[[processors.starlark]]
  namepass = ["temp"]
  source = '''
def apply(metric):
    return metric if metric.tags.get("sensor", "").startswith("coretemp_package_id_") else None
'''

[[outputs.file]]
    files = ["/app/.collector-signals/metrics.txt"] 
    rotation_interval = "1h"
    rotation_max_size = "20MB"
    rotation_max_archives = 1
