#
# Apache v2 license
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

openapi: 3.0.0
info:
  description: Edge Video Analytics Microservice REST API
  title: EVAM REST API
  version: 0.0.3
paths:
  /pipelines:
    get:
      description: Return supported pipelines
      operationId: pipelines_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pipeline'
                type: array
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
  /pipelines/{name}/{version}:
    post:
      description: Start new pipeline instance.
      operationId: pipelines_name_version_post
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineRequest'
        required: true
      responses:
        200:
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
  /pipelines/status:
    get:
      description: Returns all pipeline instance status.
      operationId: pipelines_status_get_all
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PipelineInstanceStatus'
                type: array
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
  /pipelines/{name}/{version}/{instance_id}:
    post:
      description: Send new request to a already queued pipeline 
      operationId: pipelines_name_version_instance_id_post
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
          format: uuid
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineInstanceRequest'
        required: true
      responses:
        200:
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
  /pipelines/{name}/{version}/{instance_id}/models:
    post:
        description: Download files from the model registry microservice associated with a specific model.
        operationId: pipelines_name_version_instance_id_models_files_post
        parameters:
        - explode: false
          in: path
          name: name
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: version
          required: true
          schema:
            type: string
          style: simple
        - explode: false
          in: path
          name: instance_id
          required: true
          schema:
            type: string
          style: simple
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelQueryParams'
          required: true
        responses:
          200:
            description: Success
        x-openapi-router-controller: src.rest_api.endpoints.Endpoints
  /pipelines/{instance_id}:
    delete:
      description: Stop pipeline instance.
      operationId: pipelines_instance_id_delete
      parameters:
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
          format: uuid
        style: simple
      responses:
        200:
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
    get:
      description: Return pipeline instance summary.
      operationId: pipelines_instance_id_get
      parameters:
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineInstanceSummary'
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
  /pipelines/{instance_id}/status:
    get:
      description: Return pipeline instance status.
      operationId: pipelines_instance_id_status_get
      parameters:
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineInstanceStatus'
          description: Success
      x-openapi-router-controller: src.rest_api.endpoints.Endpoints
components:
  schemas:
    AnyValue: {}
    Pipeline:
      example:
        description: description
        type: GStreamer
        parameters:
          key:
            default: ""
      properties:
        type:
          enum:
          - GStreamer
          - FFmpeg
          type: string
        description:
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/Pipeline_parameters'
          type: object
      required:
      - description
      - type
      type: object
    PipelineInstanceStatus:
      example:
        start_time: 1
        elapsed_time: 5
        id: 0
        state: RUNNING
        avg_fps: 6.027456183070403
      properties:
        id:
          format: int32
          type: integer
        state:
          enum:
          - RUNNING
          - COMPLETED
          - ERROR
          - ABORTED
          type: string
        avg_fps:
          type: number
        start_time:
          description: Time in seconds since the epoch.
          format: int32
          type: integer
        elapsed_time:
          description: Elapsed time in seconds.
          format: int32
          type: integer
      required:
      - elapsed_time
      - id
      - start_time
      - state
      type: object
    PipelineInstanceSummary:
      example:
        request:
          destination: {}
          source: {}
          parameters: {}
          tags: {}
        id: 0
        type: type
      properties:
        id:
          format: int32
          type: integer
        request:
          $ref: '#/components/schemas/PipelineRequest'
        type:
          type: string
      required:
      - id
      - request
      - type
      type: object
    URISource:
      properties:
        type:
          enum:
          - uri
          type: string
        uri:
          format: uri
          type: string
        properties:
          type: object
        capsfilter:
          type: string
        postproc:
          type: string
      required:
      - type
      - uri
      type: object
    WebcamSource:
      properties:
        type:
          enum:
          - webcam
          type: string
        device:
          type: string
          format: path
        properties:
          type: object
        capsfilter:
          type: string
        postproc:
          type: string
      required:
      - type
      - device
      type: object
    GstSource:
      properties:
        type:
          enum:
          - gst
          type: string
        element:
          type: string
        properties:
          type: object
        capsfilter:
          type: string
        postproc:
          type: string
      required:
      - type
      - element
      type: object
    FileSource:
      properties:
        type:
          enum:
          - file
          type: string
        path:
          format: path
          type: string
      required:
      - type
      - path
      type: object
    Base64Source:
      properties:
        type:
          enum:
          - base64_image
          type: string
        data:
          type: string
          format: binary
      required:
      - type
      - data
      type: object
    FileDestination:
      properties:
        type:
          enum:
          - file
          type: string
        path:
          format: path
          type: string
      required:
      - type
      - path
      type: object
    KafkaDestination:
      properties:
        host:
          description: Comma seperated list of host:port to use as boostrap servers.
          type: string
        topic:
          type: string
        type:
          enum:
          - kafka
          type: string
      required:
        - host
        - topic
      type: object
    MQTTDestination:
      anyOf:
        - type: object
          properties:
            host:
              description: host:port to use as mqtt server.
              type: string
            topic:
              type: string
            type:
              enum:
              - mqtt
              type: string
          required:
            - host
            - topic
            - type
        - type: object
          properties:
            publish_frame:
              type: boolean
            topic:
              type: string
            type:
              enum:
              - mqtt
              type: string
          required:
            - topic
            - type
    RTSPDestination:
      properties:
        type:
          enum:
          - rtsp
          type: string
        path:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_/-]*[a-zA-Z0-9]$"
      required:
        - type
        - path
      type: object
    WebRTCDestination:
      properties:
        type:
          enum:
          - webrtc
          type: string
        peer-id:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_/-]*[a-zA-Z0-9]$"
      required:
        - type
        - peer-id
      type: object
    S3_write:
      properties:
        type:
          enum:
          - s3_write
          type: string
        bucket:
          type: string
        folder_prefix:
          type: string
        block:
          type: boolean
      required:
        - type
        - bucket
        - folder_prefix
      type: object
    FrameDestination:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/RTSPDestination'
        - $ref: '#/components/schemas/WebRTCDestination'
        - $ref: '#/components/schemas/S3_write'
      type: object
    MetadataDestination:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/KafkaDestination'
        - $ref: '#/components/schemas/MQTTDestination'
        - $ref: '#/components/schemas/FileDestination'
      type: object
    FrameAndMetadataDestination:
      anyOf:
        - type: object
          properties:
            frame:
              anyOf:
                - $ref: '#/components/schemas/FrameDestination'
                - type: array
                  items:
                    $ref: '#/components/schemas/FrameDestination'
          required:
            - frame
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/MetadataDestination'
          required:
            - metadata
    PipelineRequest:
      example:
        async: true
        source:
          type: uri
          uri: file:///root/video-examples/example.mp4
        parameters: {}
        tags: {}
      properties:
        async:
          description: Indicates whether the inference operation is executed asynchronously or synchronously. Default value is true.
          type: boolean
        source:
          discriminator:
            propertyName: type
          oneOf:
           - $ref: '#/components/schemas/URISource'
           - $ref: '#/components/schemas/GstSource'
           - $ref: '#/components/schemas/WebcamSource'
          type: object
        destination:
          oneOf:
            - $ref: '#/components/schemas/MetadataDestination'
            - $ref: '#/components/schemas/FrameAndMetadataDestination'
          type: object
        tags:
          description: Client specified values. Returned with results.
          type: object
        parameters:
          description: Pipeline specific parameters.
          type: object
        S3_write:
          description: S3 write parameters such as bucket name, object key, and blocking behavior.
          type: object
          oneOf:
            - $ref: '#/components/schemas/S3_write'
      type: object
    PipelineInstanceRequest:
      example:
        timeout: 2
        source: 
          type: file
          path: file:///root/image-examples/example.jpg          
        additional_meta_data: {}
      properties:
        timeout:
          description: (Optional) The response timeout. Default value is 2.
          type: integer
        source:
          discriminator:
            propertyName: type
          oneOf:
           - $ref: '#/components/schemas/FileSource'
           - $ref: '#/components/schemas/Base64Source'
          type: object
        destination:
          oneOf:
            - $ref: '#/components/schemas/FileDestination'
          type: object
        additional_meta_data:
          description: User defined meta data supplemented to pipeline generated metadata.
          type: object
      type: object    
    Model:
      example:
        name: name
        description: description
        type: IntelDLDT
        version: 0
      properties:
        name:
          type: string
        version:
          type: string
        type:
          enum:
          - IntelDLDT
          type: string
        description:
          type: string
      required:
      - name
      - type
      - version
      type: object
    ModelQueryParams:
      example:
        project_name: person-detection
        version: v1
        category: Detection
        architecture: YOLO
        precision: FP32
        deploy: true
      properties:
        name:
          type: string
          description: The name associated to a model.
        category:
          type: string
          description: The category associated to a model.
        architecture:
          type: string
          description: The architecture associated to a model.
        precision:
          type: string
          description: The precision associated to a model.
        project_name:
          type: string
          description: The name of the project associated to a model.
        version:
          type: string
          description: The version of a model.
        deploy:
          type: boolean
          description: Indicates whether to start a new pipeline instance using the specified model and stop the current pipeline instance.
      type: object
    Pipeline_parameters:
      example:
        default: {}
      properties:
        default: {}
