apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatqna-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatqna-core
  template:
    metadata:
      labels:
        app: chatqna-core
    spec:
      containers:
        - name: chatqna-core
          image: "{{ .Values.image.registry }}chatqna:{{ .Values.image.backendTag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          readinessProbe:
            httpGet:
              path: {{ .Values.chatqna.readinessProbe.httpGet.path }}
              port: {{ .Values.chatqna.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.chatqna.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.chatqna.readinessProbe.periodSeconds }}
          startupProbe:
            httpGet:
              path: {{ .Values.chatqna.startupProbe.httpGet.path }}
              port: {{ .Values.chatqna.startupProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.chatqna.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.chatqna.startupProbe.periodSeconds }} 
          env:
            - name: http_proxy
              value: "{{ .Values.global.http_proxy }}"
            - name: https_proxy
              value: "{{ .Values.global.https_proxy }}"
            - name: no_proxy
              value: "{{ .Values.global.no_proxy }}"
            - name: HF_ACCESS_TOKEN
              value: "{{ .Values.global.huggingface.apiToken }}"
            - name: EMBEDDING_MODEL_ID
              value: "{{ .Values.global.EMBEDDING_MODEL_NAME }}"
            - name: RERANKER_MODEL_ID
              value: "{{ .Values.global.RERANKER_MODEL}}"
            - name: LLM_MODEL_ID
              value: "{{ .Values.global.LLM_MODEL }}"
          ports:
            - containerPort: 8888
          volumeMounts:
            - name: model-cache
              mountPath: "{{ .Values.global.model_cache_path }}"
      volumes:
        - name: model-cache
          emptyDir: {}
