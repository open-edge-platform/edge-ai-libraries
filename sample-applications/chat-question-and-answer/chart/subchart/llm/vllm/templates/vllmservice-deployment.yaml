apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.vllmService.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.vllmService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.vllmService.name }}
    spec:
      containers:
        - name: {{ .Values.vllmService.name }}
          image: "{{ .Values.vllmService.image.repository}}:{{ .Values.vllmService.image.tag }}"
          imagePullPolicy: {{ .Values.vllmService.image.pullPolicy }}
          readinessProbe:
            httpGet:
              path: {{ .Values.vllmService.readinessProbe.httpGet.path }}
              port: {{ .Values.vllmService.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.vllmService.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.vllmService.readinessProbe.periodSeconds }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /data
            - name: data
              mountPath: /root/.cache/huggingface
          env:
            - name: no_proxy
              value: {{ .Values.global.proxy.no_proxy }}
            - name: http_proxy
              value: {{ .Values.global.proxy.http_proxy }}
            - name: https_proxy
              value: {{ .Values.global.proxy.https_proxy }}
            - name: HUGGING_FACE_HUB_TOKEN
              value: {{ .Values.global.huggingface.apiToken }}
            - name: LLM_MODEL
              value: {{ .Values.global.LLM_MODEL }}
            - name: VLLM_CPU_KVCACHE_SPACE
              value: "{{ .Values.vllmService.env.KVCACHE }}"
            - name: VLLM_OPENVINO_KVCACHE_SPACE
              value: "{{ .Values.vllmService.env.KVCACHE }}"
            - name: TENSOR_PARALLEL_SIZE
              value: "{{ .Values.vllmService.env.TENSOR_PARALLEL_SIZE }}"
            - name: VLLM_OPENVINO_CPU_KV_CACHE_PRECISION
              value: "{{ .Values.vllmService.env.VLLM_OPENVINO_CPU_KV_CACHE_PRECISION }}"
            - name: VLLM_OPENVINO_ENABLE_QUANTIZED_WEIGHTS
              value: "{{ .Values.vllmService.env.VLLM_OPENVINO_ENABLE_QUANTIZED_WEIGHTS }}"
            - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
              value: {{ .Values.vllmService.env.OTEL_EXPORTER_OTLP_TRACES_PROTOCOL }}
            - name: OTEL_METRICS_EXPORTER
              value: {{ .Values.vllmService.env.OTEL_METRICS_EXPORTER }}
            - name: OTEL_TRACES_EXPORTER
              value: {{ .Values.vllmService.env.OTEL_TRACES_EXPORTER }}
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.vllmService.env.OTEL_SERVICE_NAME }}
            - name: OTEL_SERVICE_ENV
              value: {{ .Values.vllmService.env.OTEL_SERVICE_ENV }}
            - name: OTLP_ENDPOINT
              value: {{- if eq .Values.global.OTLP_ENDPOINT "<otlp-endpoint>"}}

                      {{- else}}
                         {{ .Values.global.OTLP_ENDPOINT }}
                      {{- end }}
            - name: OTLP_ENDPOINT_TRACE
              value: {{- if eq .Values.global.OTLP_ENDPOINT_TRACE "<otlp-endpoint-trace>"}}

                      {{- else}}
                         {{ .Values.global.OTLP_ENDPOINT_TRACE }}
                      {{- end }}
          command:
            - "/bin/bash"
            - "-c"
            - >
              pip install 'opentelemetry-sdk>=1.26.0,<1.27.0'
              'opentelemetry-api>=1.26.0,<1.27.0'
              'opentelemetry-exporter-otlp>=1.26.0,<1.27.0'
              'opentelemetry-semantic-conventions-ai>=0.4.1,<0.5.0'
              opentelemetry-instrumentation-fastapi &&
              opentelemetry-instrument python3 -m vllm.entrypoints.openai.api_server
              --enforce-eager
              --model {{ .Values.global.LLM_MODEL }}
              --tensor-parallel-size 1
              --host 0.0.0.0
              --port 80
              --otlp-traces-endpoint={{- if eq .Values.global.OTLP_ENDPOINT_TRACE ""}}{{- else }}{{ .Values.global.OTLP_ENDPOINT_TRACE }}{{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: vllm-pvc
