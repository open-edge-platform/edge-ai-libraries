apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nginx.fullname" . }}-config
data:
  default.conf: |+
    # Config for nginx mounted to /etc/nginx/conf.d in the pod

    server {
        listen       80;
        listen  [::]:80;

        client_max_body_size 500M;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300; 

        location / {
            proxy_pass http://{{ index .Values "chatqnaui" "name" }}:{{ index .Values "chatqnaui" "service" "port" }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /v1/chatqna {
            proxy_pass http://{{ .Values.Chatqna.name }}:{{ .Values.Chatqna.service.port }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location /v1/dataprep {
            proxy_pass http://{{ .Values.dataprepPgvector.name }}:{{ index .Values "dataprepPgvector" "service" "port" }};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx.fullname" . }}
  labels:
    {{- include "chatqna-helm-chart.labels" . | nindent 4 }}
    app: {{ include "nginx.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "chatqna-helm-chart.selectorLabels" . | nindent 6 }}
      app: {{ include "nginx.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "chatqna-helm-chart.selectorLabels" . | nindent 8 }}
        app: {{ include "nginx.fullname" . }}
    spec:
      containers:
      - image: nginx:1.27.1
        imagePullPolicy: {{ .Values.Chatqna.image.pullPolicy }}
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config-volume
      securityContext: {}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ include "nginx.fullname" . }}-config
        name: nginx-config-volume
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nginx.fullname" . }}
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    {{- include "chatqna-helm-chart.selectorLabels" . | nindent 4 }}
    app: {{ include "nginx.fullname" . }}
  type: NodePort
